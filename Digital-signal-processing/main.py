import sig_sys_processing as ssp
import numpy as np
Input_1kHz_15kHz = [

    +0.0000000000, +0.5924659585, -0.0947343455, +0.1913417162, +
    1.0000000000, +0.4174197128, +0.3535533906, +1.2552931065,
    +0.8660254038, +0.4619397663, +1.3194792169, +1.1827865776, +
    0.5000000000, +1.1827865776, +1.3194792169, +0.4619397663,
    +0.8660254038, +1.2552931065, +0.3535533906, +0.4174197128, +
    1.0000000000, +0.1913417162, -0.0947343455, +0.5924659585,
    -0.0000000000, -0.5924659585, +0.0947343455, -0.1913417162, -
    1.0000000000, -0.4174197128, -0.3535533906, -1.2552931065,
    -0.8660254038, -0.4619397663, -1.3194792169, -1.1827865776, -
    0.5000000000, -1.1827865776, -1.3194792169, -0.4619397663,
    -0.8660254038, -1.2552931065, -0.3535533906, -0.4174197128, -
    1.0000000000, -0.1913417162, +0.0947343455, -0.5924659585,
    +0.0000000000, +0.5924659585, -0.0947343455, +0.1913417162, +
    1.0000000000, +0.4174197128, +0.3535533906, +1.2552931065,
    +0.8660254038, +0.4619397663, +1.3194792169, +1.1827865776, +
    0.5000000000, +1.1827865776, +1.3194792169, +0.4619397663,
    +0.8660254038, +1.2552931065, +0.3535533906, +0.4174197128, +
    1.0000000000, +0.1913417162, -0.0947343455, +0.5924659585,
    +0.0000000000, -0.5924659585, +0.0947343455, -0.1913417162, -
    1.0000000000, -0.4174197128, -0.3535533906, -1.2552931065,
    -0.8660254038, -0.4619397663, -1.3194792169, -1.1827865776, -
    0.5000000000, -1.1827865776, -1.3194792169, -0.4619397663,
    -0.8660254038, -1.2552931065, -0.3535533906, -0.4174197128, -
    1.0000000000, -0.1913417162, +0.0947343455, -0.5924659585,
    +0.0000000000, +0.5924659585, -0.0947343455, +0.1913417162, +
    1.0000000000, +0.4174197128, +0.3535533906, +1.2552931065,
    +0.8660254038, +0.4619397663, +1.3194792169, +1.1827865776, +
    0.5000000000, +1.1827865776, +1.3194792169, +0.4619397663,
    +0.8660254038, +1.2552931065, +0.3535533906, +0.4174197128, +
    1.0000000000, +0.1913417162, -0.0947343455, +0.5924659585,
    +0.0000000000, -0.5924659585, +0.0947343455, -0.1913417162, -
    1.0000000000, -0.4174197128, -0.3535533906, -1.2552931065,
    -0.8660254038, -0.4619397663, -1.3194792169, -1.1827865776, -
    0.5000000000, -1.1827865776, -1.3194792169, -0.4619397663,
    -0.8660254038, -1.2552931065, -0.3535533906, -0.4174197128, -
    1.0000000000, -0.1913417162, +0.0947343455, -0.5924659585,
    -0.0000000000, +0.5924659585, -0.0947343455, +0.1913417162, +
    1.0000000000, +0.4174197128, +0.3535533906, +1.2552931065,
    +0.8660254038, +0.4619397663, +1.3194792169, +1.1827865776, +
    0.5000000000, +1.1827865776, +1.3194792169, +0.4619397663,
    +0.8660254038, +1.2552931065, +0.3535533906, +0.4174197128, +
    1.0000000000, +0.1913417162, -0.0947343455, +0.5924659585,
    -0.0000000000, -0.5924659585, +0.0947343455, -0.1913417162, -
    1.0000000000, -0.4174197128, -0.3535533906, -1.2552931065,
    -0.8660254038, -0.4619397663, -1.3194792169, -1.1827865776, -
    0.5000000000, -1.1827865776, -1.3194792169, -0.4619397663,
    -0.8660254038, -1.2552931065, -0.3535533906, -0.4174197128, -
    1.0000000000, -0.1913417162, +0.0947343455, -0.5924659585,
    +0.0000000000, +0.5924659585, -0.0947343455, +0.1913417162, +
    1.0000000000, +0.4174197128, +0.3535533906, +1.2552931065,
    +0.8660254038, +0.4619397663, +1.3194792169, +1.1827865776, +
    0.5000000000, +1.1827865776, +1.3194792169, +0.4619397663,
    +0.8660254038, +1.2552931065, +0.3535533906, +0.4174197128, +
    1.0000000000, +0.1913417162, -0.0947343455, +0.5924659585,
    +0.0000000000, -0.5924659585, +0.0947343455, -0.1913417162, -
    1.0000000000, -0.4174197128, -0.3535533906, -1.2552931065,
    -0.8660254038, -0.4619397663, -1.3194792169, -1.1827865776, -
    0.5000000000, -1.1827865776, -1.3194792169, -0.4619397663,
    -0.8660254038, -1.2552931065, -0.3535533906, -0.4174197128, -
    1.0000000000, -0.1913417162, +0.0947343455, -0.5924659585,
    -0.0000000000, +0.5924659585, -0.0947343455, +0.1913417162, +
    1.0000000000, +0.4174197128, +0.3535533906, +1.2552931065,
    +0.8660254038, +0.4619397663, +1.3194792169, +1.1827865776, +
    0.5000000000, +1.1827865776, +1.3194792169, +0.4619397663,
    +0.8660254038, +1.2552931065, +0.3535533906, +0.4174197128, +
    1.0000000000, +0.1913417162, -0.0947343455, +0.5924659585,
    +0.0000000000, -0.5924659585, +0.0947343455, -0.1913417162, -
    1.0000000000, -0.4174197128, -0.3535533906, -1.2552931065,
    -0.8660254038, -0.4619397663, -1.3194792169, -1.1827865776, -
    0.5000000000, -1.1827865776, -1.3194792169, -0.4619397663,
    -0.8660254038, -1.2552931065, -0.3535533906, -0.4174197128, -
    1.0000000000, -0.1913417162, +0.0947343455, -0.5924659585,
    -0.0000000000, +0.5924659585, -0.0947343455, +0.1913417162, +
    1.0000000000, +0.4174197128, +0.3535533906, +1.2552931065,
    +0.8660254038, +0.4619397663, +1.3194792169, +1.1827865776, +
    0.5000000000, +1.1827865776, +1.3194792169, +0.4619397663,
    +0.8660254038, +1.2552931065, +0.3535533906, +0.4174197128, +
    1.0000000000, +0.1913417162, -0.0947343455, +0.5924659585,
    +0.0000000000, -0.5924659585, +0.0947343455, -0.1913417162, -
    1.0000000000, -0.4174197128, -0.3535533906, -1.2552931065,
]

Impulse_response = [
    -0.0018225230, -0.0015879294, +0.0000000000, +0.0036977508, +
    0.0080754303, +0.0085302217, -0.0000000000, -0.0173976984,
    -0.0341458607, -0.0333591565, +0.0000000000, +0.0676308395, +
    0.1522061835, +0.2229246956, +0.2504960933, +0.2229246956,
    +0.1522061835, +0.0676308395, +0.0000000000, -0.0333591565, -
    0.0341458607, -0.0173976984, -0.0000000000, +0.0085302217,
    +0.0080754303, +0.0036977508, +0.0000000000, -0.0015879294, -0.0018225230
]

ECG = [
    0, 0.0010593, 0.0021186, 0.003178, 0.0042373, 0.0052966, 0.0063559,
    0.0074153, 0.0084746, 0.045198, 0.081921, 0.11864, 0.15537, 0.19209,
    0.22881, 0.26554, 0.30226, 0.33898, 0.30226, 0.26554, 0.22881, 0.19209,
    0.15537, 0.11864, 0.081921, 0.045198, 0.0084746, 0.0077684, 0.0070621,
    0.0063559, 0.0056497, 0.0049435, 0.0042373, 0.0035311, 0.0028249,
    0.0021186, 0.0014124, 0.00070621, 0, -0.096045, -0.19209, -0.28814,
    -0.073446, 0.14124, 0.35593, 0.57062, 0.78531, 1, 0.73729, 0.47458,
    0.21186, -0.050847, -0.31356, -0.57627, -0.83898, -0.55932, -0.27966, 0,
    0.00073692, 0.0014738, 0.0022108, 0.0029477, 0.0036846, 0.0044215,
    0.0051584, 0.0058954, 0.0066323, 0.0073692, 0.0081061, 0.008843, 0.00958,
    0.010317, 0.011054, 0.011791, 0.012528, 0.013265, 0.014001, 0.014738,
    0.015475, 0.016212, 0.016949, 0.03484, 0.052731, 0.070621, 0.088512,
    0.1064, 0.12429, 0.14218, 0.16008, 0.17797, 0.16186, 0.14576, 0.12966,
    0.11356, 0.097458, 0.081356, 0.065254, 0.049153, 0.033051, 0.016949,
    0.013559, 0.010169, 0.0067797, 0.0033898, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0010593, 0.0021186, 0.003178,
    0.0042373, 0.0052966, 0.0063559, 0.0074153, 0.0084746, 0.045198, 0.081921,
    0.11864, 0.15537, 0.19209, 0.22881, 0.26554, 0.30226, 0.33898, 0.30226,
    0.26554, 0.22881, 0.19209, 0.15537, 0.11864, 0.081921, 0.045198, 0.0084746,
    0.0077684, 0.0070621, 0.0063559, 0.0056497, 0.0049435, 0.0042373,
    0.0035311, 0.0028249, 0.0021186, 0.0014124, 0.00070621, 0, -0.096045,
    -0.19209, -0.28814, -0.073446, 0.14124, 0.35593, 0.57062, 0.78531, 1,
    0.73729, 0.47458, 0.21186, -0.050847, -0.31356, -0.57627, -0.83898,
    -0.55932, -0.27966, 0, 0.00073692, 0.0014738, 0.0022108, 0.0029477,
    0.0036846, 0.0044215, 0.0051584, 0.0058954, 0.0066323, 0.0073692,
    0.0081061, 0.008843, 0.00958, 0.010317, 0.011054, 0.011791, 0.012528,
    0.013265, 0.014001, 0.014738, 0.015475, 0.016212, 0.016949, 0.03484,
    0.052731, 0.070621, 0.088512, 0.1064, 0.12429, 0.14218, 0.16008, 0.17797,
    0.16186, 0.14576, 0.12966, 0.11356, 0.097458, 0.081356, 0.065254, 0.049153,
    0.033051, 0.016949, 0.013559, 0.010169, 0.0067797, 0.0033898, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0010593,
    0.0021186, 0.003178, 0.0042373, 0.0052966, 0.0063559, 0.0074153, 0.0084746,
    0.045198, 0.081921, 0.11864, 0.15537, 0.19209, 0.22881, 0.26554, 0.30226,
    0.33898, 0.30226, 0.26554, 0.22881, 0.19209, 0.15537, 0.11864, 0.081921,
    0.045198, 0.0084746, 0.0077684, 0.0070621, 0.0063559, 0.0056497, 0.0049435,
    0.0042373, 0.0035311, 0.0028249, 0.0021186, 0.0014124, 0.00070621, 0,
    -0.096045, -0.19209, -0.28814, -0.073446, 0.14124, 0.35593, 0.57062,
    0.78531, 1, 0.73729, 0.47458, 0.21186, -0.050847, -0.31356, -0.57627,
    -0.83898, -0.55932, -0.27966, 0, 0.00073692, 0.0014738, 0.0022108,
    0.0029477, 0.0036846, 0.0044215, 0.0051584, 0.0058954, 0.0066323,
    0.0073692, 0.0081061, 0.008843, 0.00958, 0.010317, 0.011054, 0.011791,
    0.012528, 0.013265, 0.014001, 0.014738, 0.015475, 0.016212, 0.016949,
    0.03484, 0.052731, 0.070621, 0.088512, 0.1064, 0.12429, 0.14218, 0.16008,
    0.17797, 0.16186, 0.14576, 0.12966, 0.11356, 0.097458, 0.081356, 0.065254,
    0.049153, 0.033051, 0.016949, 0.013559, 0.010169, 0.0067797, 0.0033898, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0.0010593, 0.0021186, 0.003178, 0.0042373, 0.0052966, 0.0063559, 0.0074153,
    0.0084746, 0.045198, 0.081921, 0.11864, 0.15537, 0.19209, 0.22881, 0.26554,
    0.30226, 0.33898, 0.30226, 0.26554, 0.22881, 0.19209, 0.15537, 0.11864,
    0.081921, 0.045198, 0.0084746, 0.0077684, 0.0070621, 0.0063559, 0.0056497,
    0.0049435, 0.0042373, 0.0035311, 0.0028249, 0.0021186, 0.0014124,
    0.00070621, 0, -0.096045, -0.19209, -0.28814, -0.073446, 0.14124, 0.35593,
    0.57062, 0.78531, 1, 0.73729, 0.47458, 0.21186, -0.050847, -0.31356,
    -0.57627, -0.83898, -0.55932, -0.27966, 0, 0.00073692, 0.0014738,
    0.0022108, 0.0029477, 0.0036846, 0.0044215, 0.0051584, 0.0058954,
    0.0066323, 0.0073692, 0.0081061, 0.008843, 0.00958, 0.010317, 0.011054,
    0.011791, 0.012528, 0.013265, 0.014001, 0.014738, 0.015475, 0.016212,
    0.016949, 0.03484, 0.052731, 0.070621, 0.088512, 0.1064, 0.12429, 0.14218,
    0.16008, 0.17797, 0.16186, 0.14576, 0.12966, 0.11356, 0.097458, 0.081356,
    0.065254, 0.049153, 0.033051, 0.016949, 0.013559, 0.010169, 0.0067797,
    0.0033898, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0.0010593, 0.0021186, 0.003178, 0.0042373, 0.0052966,
    0.0063559, 0.0074153, 0.0084746, 0.045198, 0.081921, 0.11864, 0.15537,
    0.19209, 0.22881, 0.26554, 0.30226, 0.33898, 0.30226, 0.26554, 0.22881,
    0.19209, 0.15537, 0.11864, 0.081921, 0.045198, 0.0084746, 0.0077684,
    0.0070621, 0.0063559, 0.0056497, 0.0049435, 0.0042373, 0.0035311,
    0.0028249, 0.0021186, 0.0014124, 0.00070621, 0, -0.096045, -0.19209,
    -0.28814, -0.073446, 0.14124, 0.35593, 0.57062, 0.78531, 1, 0.73729,
    0.47458, 0.21186, -0.050847, -0.31356, -0.57627, -0.83898, -0.55932,
    -0.27966, 0, 0.00073692, 0.0014738, 0.0022108, 0.0029477, 0.0036846,
    0.0044215, 0.0051584, 0.0058954, 0.0066323, 0.0073692, 0.0081061, 0.008843,
    0.00958, 0.010317, 0.011054, 0.011791, 0.012528, 0.013265, 0.014001,
    0.014738, 0.015475, 0.016212, 0.016949, 0.03484, 0.052731, 0.070621,
    0.088512, 0.1064, 0.12429, 0.14218, 0.16008, 0.17797, 0.16186, 0.14576,
    0.12966, 0.11356, 0.097458, 0.081356, 0.065254, 0.049153, 0.033051,
    0.016949, 0.013559, 0.010169, 0.0067797, 0.0033898, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]


def main():
    # # # The signals part
    # # plot the signal Input_1kHz_15kHz (in time domain)
    # ssp.plot_signal(Input_1kHz_15kHz, "Input_1kHz_15kHz")

    # # convert into freqency, plot real/imaginary/magnitude/phase
    # cs = ssp.convert_to_frequency_domain(Input_1kHz_15kHz)
    # ssp.plot_frequency(cs,"Input_1kHz_15kHz_Freq")

    # # using Inverse-FFT to get back to time domain
    # ics = ssp.revert_to_time_domain(cs[5])
    # ssp.plot_signal(ics, "Reverted_Input_1kHz_15kHz")

    # # # The systems part
    # # plot the Impulse_response
    # ssp.plot_signal(Impulse_response, "impulse_response")

    # # convert into freqency, plot real/imaginary/magnitude/phase
    # cir = ssp.convert_to_frequency_domain(Impulse_response)
    # ssp.plot_frequency(cir, "impulse_response_Freq")

    # # calculate the output using time convolution
    # output = ssp.time_convolution(Input_1kHz_15kHz, Impulse_response)
    # output_freq = ssp.convert_to_frequency_domain(output)
    # ssp.plot_frequency(output_freq, "output_Freq")

    # # calculate the output using frequency multiplication
    # output_freq_mult = ssp.frequency_multiplication(Input_1kHz_15kHz, Impulse_response)
    # ssp.plot_frequency(output_freq_mult, "output_freq_mult")

    # # # Filtering
    # # Modify the impulse response to remove low frequency components
    # remove_low_freq = ssp.high_pass_filter(Impulse_response)
    # ssp.plot_signal(remove_low_freq, "remove_low_freq")
    
    # # # The ECG
    # # analyze the ECG signal frequency domain
    # converted_ECG = ssp.convert_to_frequency_domain(ECG)
    # ssp.plot_frequency(converted_ECG, "ECG_Freq")

    # # low pass filter
    # ssp.plot_signal(ECG, "ECG")
    # filtered_ECG = ssp.low_pass_filter(ECG)
    # ssp.plot_signal(filtered_ECG, "filtered_ECG")

    # # White noise
    # white_noise = ssp.noise(0.1)
    # ECG_white_noise = ECG + white_noise
    # ssp.plot_signal(ECG_white_noise, "ECG_white_noise")
    # filtered_ECG_white_noise = ssp.low_pass_filter(ECG_white_noise)
    # ssp.plot_signal(filtered_ECG_white_noise, "filtered_ECG_white_noise")

    # # High frequency noise
    high_freq_noise = ssp.noise(0.5)
    ECG_high_freq_noise = ECG + high_freq_noise
    ssp.plot_signal(ECG_high_freq_noise, "ECG_high_freq_noise")
    filtered_ECG_high_freq_noise = ssp.low_pass_filter(ECG_high_freq_noise)
    ssp.plot_signal(filtered_ECG_high_freq_noise, "filtered_ECG_high_freq_noise")

    
if __name__ == "__main__":
    main()
