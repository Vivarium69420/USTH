import numpy as np
import matplotlib.pyplot as plt
import scipy.signal as sig

Input_1kHz_15kHz_raw = [

    +0.0000000000, +0.5924659585, -0.0947343455, +0.1913417162, +
    1.0000000000, +0.4174197128, +0.3535533906, +1.2552931065,
    +0.8660254038, +0.4619397663, +1.3194792169, +1.1827865776, +
    0.5000000000, +1.1827865776, +1.3194792169, +0.4619397663,
    +0.8660254038, +1.2552931065, +0.3535533906, +0.4174197128, +
    1.0000000000, +0.1913417162, -0.0947343455, +0.5924659585,
    -0.0000000000, -0.5924659585, +0.0947343455, -0.1913417162, -
    1.0000000000, -0.4174197128, -0.3535533906, -1.2552931065,
    -0.8660254038, -0.4619397663, -1.3194792169, -1.1827865776, -
    0.5000000000, -1.1827865776, -1.3194792169, -0.4619397663,
    -0.8660254038, -1.2552931065, -0.3535533906, -0.4174197128, -
    1.0000000000, -0.1913417162, +0.0947343455, -0.5924659585,
    +0.0000000000, +0.5924659585, -0.0947343455, +0.1913417162, +
    1.0000000000, +0.4174197128, +0.3535533906, +1.2552931065,
    +0.8660254038, +0.4619397663, +1.3194792169, +1.1827865776, +
    0.5000000000, +1.1827865776, +1.3194792169, +0.4619397663,
    +0.8660254038, +1.2552931065, +0.3535533906, +0.4174197128, +
    1.0000000000, +0.1913417162, -0.0947343455, +0.5924659585,
    +0.0000000000, -0.5924659585, +0.0947343455, -0.1913417162, -
    1.0000000000, -0.4174197128, -0.3535533906, -1.2552931065,
    -0.8660254038, -0.4619397663, -1.3194792169, -1.1827865776, -
    0.5000000000, -1.1827865776, -1.3194792169, -0.4619397663,
    -0.8660254038, -1.2552931065, -0.3535533906, -0.4174197128, -
    1.0000000000, -0.1913417162, +0.0947343455, -0.5924659585,
    +0.0000000000, +0.5924659585, -0.0947343455, +0.1913417162, +
    1.0000000000, +0.4174197128, +0.3535533906, +1.2552931065,
    +0.8660254038, +0.4619397663, +1.3194792169, +1.1827865776, +
    0.5000000000, +1.1827865776, +1.3194792169, +0.4619397663,
    +0.8660254038, +1.2552931065, +0.3535533906, +0.4174197128, +
    1.0000000000, +0.1913417162, -0.0947343455, +0.5924659585,
    +0.0000000000, -0.5924659585, +0.0947343455, -0.1913417162, -
    1.0000000000, -0.4174197128, -0.3535533906, -1.2552931065,
    -0.8660254038, -0.4619397663, -1.3194792169, -1.1827865776, -
    0.5000000000, -1.1827865776, -1.3194792169, -0.4619397663,
    -0.8660254038, -1.2552931065, -0.3535533906, -0.4174197128, -
    1.0000000000, -0.1913417162, +0.0947343455, -0.5924659585,
    -0.0000000000, +0.5924659585, -0.0947343455, +0.1913417162, +
    1.0000000000, +0.4174197128, +0.3535533906, +1.2552931065,
    +0.8660254038, +0.4619397663, +1.3194792169, +1.1827865776, +
    0.5000000000, +1.1827865776, +1.3194792169, +0.4619397663,
    +0.8660254038, +1.2552931065, +0.3535533906, +0.4174197128, +
    1.0000000000, +0.1913417162, -0.0947343455, +0.5924659585,
    -0.0000000000, -0.5924659585, +0.0947343455, -0.1913417162, -
    1.0000000000, -0.4174197128, -0.3535533906, -1.2552931065,
    -0.8660254038, -0.4619397663, -1.3194792169, -1.1827865776, -
    0.5000000000, -1.1827865776, -1.3194792169, -0.4619397663,
    -0.8660254038, -1.2552931065, -0.3535533906, -0.4174197128, -
    1.0000000000, -0.1913417162, +0.0947343455, -0.5924659585,
    +0.0000000000, +0.5924659585, -0.0947343455, +0.1913417162, +
    1.0000000000, +0.4174197128, +0.3535533906, +1.2552931065,
    +0.8660254038, +0.4619397663, +1.3194792169, +1.1827865776, +
    0.5000000000, +1.1827865776, +1.3194792169, +0.4619397663,
    +0.8660254038, +1.2552931065, +0.3535533906, +0.4174197128, +
    1.0000000000, +0.1913417162, -0.0947343455, +0.5924659585,
    +0.0000000000, -0.5924659585, +0.0947343455, -0.1913417162, -
    1.0000000000, -0.4174197128, -0.3535533906, -1.2552931065,
    -0.8660254038, -0.4619397663, -1.3194792169, -1.1827865776, -
    0.5000000000, -1.1827865776, -1.3194792169, -0.4619397663,
    -0.8660254038, -1.2552931065, -0.3535533906, -0.4174197128, -
    1.0000000000, -0.1913417162, +0.0947343455, -0.5924659585,
    -0.0000000000, +0.5924659585, -0.0947343455, +0.1913417162, +
    1.0000000000, +0.4174197128, +0.3535533906, +1.2552931065,
    +0.8660254038, +0.4619397663, +1.3194792169, +1.1827865776, +
    0.5000000000, +1.1827865776, +1.3194792169, +0.4619397663,
    +0.8660254038, +1.2552931065, +0.3535533906, +0.4174197128, +
    1.0000000000, +0.1913417162, -0.0947343455, +0.5924659585,
    +0.0000000000, -0.5924659585, +0.0947343455, -0.1913417162, -
    1.0000000000, -0.4174197128, -0.3535533906, -1.2552931065,
    -0.8660254038, -0.4619397663, -1.3194792169, -1.1827865776, -
    0.5000000000, -1.1827865776, -1.3194792169, -0.4619397663,
    -0.8660254038, -1.2552931065, -0.3535533906, -0.4174197128, -
    1.0000000000, -0.1913417162, +0.0947343455, -0.5924659585,
    -0.0000000000, +0.5924659585, -0.0947343455, +0.1913417162, +
    1.0000000000, +0.4174197128, +0.3535533906, +1.2552931065,
    +0.8660254038, +0.4619397663, +1.3194792169, +1.1827865776, +
    0.5000000000, +1.1827865776, +1.3194792169, +0.4619397663,
    +0.8660254038, +1.2552931065, +0.3535533906, +0.4174197128, +
    1.0000000000, +0.1913417162, -0.0947343455, +0.5924659585,
    +0.0000000000, -0.5924659585, +0.0947343455, -0.1913417162, -
    1.0000000000, -0.4174197128, -0.3535533906, -1.2552931065,
]

Input_1kHz_15kHz = np.array(Input_1kHz_15kHz_raw)

# Create a highpass filter to remove the low frequencies components from Input_1kHz_15kHz
# The filter is a 1st order Butterworth filter with a cutoff frequency of 1kHz
# The sampling frequency is 48kHz
# The filter is applied to the signal using the scipy.signal.lfilter function
b, a = sig.butter(1, 1000, 'highpass', fs=48000)
Input_1kHz_15kHz_filtered = sig.lfilter(b, a, Input_1kHz_15kHz)

# plot the frequency response of the filter
w, h = sig.freqz(b, a)
fig, ax1 = plt.subplots()
ax1.set_title('Fig.9: Highpass filter frequency response cut-off=1kHz fs=48kHz')
ax1.plot(w, 20 * np.log10(abs(h)), 'b')
ax1.set_ylabel('Amplitude [dB]', color='b')
ax1.set_xlabel('Frequency [rad/sample]')
ax2 = ax1.twinx()
angles = np.unwrap(np.angle(h))
ax2.plot(w, angles, 'g')
ax2.set_ylabel('Angle (radians)', color='g')
ax2.grid()
ax2.axis('tight')
plt.tight_layout()
plt.show()


# plot the input signal and the filtered signal in 2 subplots
fig, (ax1, ax2) = plt.subplots(2, 1, sharex=True)
fig.suptitle('Fig.10: Highpass filter ouput data in time domain')
ax1.plot(Input_1kHz_15kHz)
ax1.set_title('Input signal')
ax2.plot(Input_1kHz_15kHz_filtered)
ax2.set_title('Filtered signal')
plt.tight_layout()
plt.show()

# plot the input signal and the filtered signal in frequency domain using fft
fig, (ax1, ax2) = plt.subplots(2, 1, sharex=True)
fig.suptitle('Fig.11: Highpass filter ouput data in frequency domain')
ax1.plot(np.abs(np.fft.fft(Input_1kHz_15kHz)))
ax1.set_title('Input signal')
ax2.plot(np.abs(np.fft.fft(Input_1kHz_15kHz_filtered)))
ax2.set_title('Filtered signal')
plt.tight_layout()
plt.show()
